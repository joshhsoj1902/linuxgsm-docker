defaults: &defaults 
    working_directory: ~/build
    docker: 
      - image: joshhsoj1902/circleci-build-image:2.1.0
swarm_test: &swarm_test
    name: Start container & run tests
    command: | 
      docker swarm init
      docker stack deploy --compose-file ./docker-stack.yml game
      sleep 30
      retry -v -s 5 -t 12 'docker exec $(docker ps -q) curl -f http://localhost:28080/live || exit 1'
      retry -v -s 5 -t 60 'docker exec $(docker ps -q) curl -f http://localhost:28080/ready || exit 1'
version: 2.1

orbs:
    docker: joshhsoj1902/docker@0.20.0

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - run: 
          name: setup workspace
          command: |
            cp -rp docker-compose.citest.yml docker-stack.yml Makefile scripts examples /tmp/workspace
            ls -ltr /tmp/workspace
            ls -ltr /tmp/workspace/examples
      - persist_to_workspace:
          root: /tmp/workspace
          paths: 
            - docker-compose.citest.yml
            - docker-stack.yml
            - examples
            - Makefile
            - scripts

  swarm:
    <<: *defaults
    steps:
      - setup_remote_docker:
          version: 19.03.8
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load -i /tmp/workspace/images.tar
      - run: cp /tmp/workspace/docker-stack.yml ./docker-stack.yml
      - run: docker tag joshhsoj1902/linuxgsm-docker:latest joshhsoj1902/linuxgsm-docker:local
      - run:
          <<: *swarm_test
workflows:
  version: 2
  build_and_test:
    jobs:
      - setup
      - docker/build:
          context: org-global
          tag: latest
          requires: 
            - setup
      # - docker/test:
      #     name: gomplate tests
      #     requires:
      #       - docker/build          
      - swarm:
          name: swarm-test
          requires:
            - docker/build
      - docker/container-health:
          name: compose-test
          composeFile: docker-compose.citest.yml
          command: docker-compose -p citest -f /tmp/workspace/docker-compose.citest.yml up
          service: css
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/docker-compose.citest.yml -p citest
                service: css
                command: curl -f http://localhost:28080/ready
                sleep: 15
                tries: 60
          requires:
            - docker/build
    ### 7dtd ###    
      - docker/container-health:
          name: 7dtd-compose
          composeFile: examples/docker-compose.7dtd.yml
          command: docker-compose -p 7dtd -f /tmp/workspace/examples/docker-compose.7dtd.yml up
          service: 7dtd
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.7dtd.yml -p 7dtd
                service: 7dtd
                command: curl -f http://localhost:28080/ready
                sleep: 30
                tries: 30
          requires:
            - swarm-test
            - compose-test 
    ### ARK ###    
      - docker/container-health:
          name: ark-compose
          composeFile: examples/docker-compose.ark.yml
          command: docker-compose -p ark -f /tmp/workspace/examples/docker-compose.ark.yml up
          service: ark
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.ark.yml -p ark
                service: ark
                command: curl -f http://localhost:28080/ready
                sleep: 30
                tries: 60
          requires:
            - swarm-test
            - compose-test  
    ### CSGO ###    
      - docker/container-health:
          name: csgo-compose
          composeFile: examples/docker-compose.csgo.yml
          command: docker-compose -p csgo -f /tmp/workspace/examples/docker-compose.csgo.yml up
          service: csgo
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.csgo.yml -p csgo
                service: csgo
                command: curl -f http://localhost:28080/ready
                sleep: 30
                tries: 60
          requires:
            - swarm-test
            - compose-test  
    ### CSS ###    
      - docker/container-health:
          name: css-compose
          composeFile: examples/docker-compose.css.yml
          command: docker-compose -p css -f /tmp/workspace/examples/docker-compose.css.yml up
          service: css
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.css.yml -p css
                service: css
                command: curl -f http://localhost:28080/ready
                sleep: 5
                tries: 60
          requires:
            - swarm-test
            - compose-test  
    ### GMOD ###    
      - docker/container-health:
          name: gmod-compose
          composeFile: examples/docker-compose.gmod.yml
          command: docker-compose -p gmod -f /tmp/workspace/examples/docker-compose.gmod.yml up
          service: gmod
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.gmod.yml -p gmod
                service: gmod
                command: curl -f http://localhost:28080/ready
                sleep: 15
                tries: 60
          requires:
            - swarm-test
            - compose-test
    ### INSS ###     
      # - docker/container-health:
      #     name: inss-compose
      #     composeFile: examples/docker-compose.inss.yml
      #     command: docker-compose -p inss -f /tmp/workspace/examples/docker-compose.inss.yml up
      #     service: inss
      #     after_test: 
      #       - docker/compose-exec-retry:
      #           composeFilePath: /tmp/workspace/examples/docker-compose.inss.yml -p inss
      #           service: inss 
      #           command: curl -f http://localhost:28080/ready
      #           sleep: 30
      #           tries: 60
      #     requires:
      #       - swarm-test
      #       - compose-test   
    ### Minecraft ###     
      - docker/container-health:
          name: minecraft-compose
          composeFile: examples/docker-compose.minecraft.yml
          command: docker-compose -p minecraft -f /tmp/workspace/examples/docker-compose.minecraft.yml up
          service: minecraft
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.minecraft.yml -p minecraft
                service: minecraft
                command: curl -f http://localhost:28080/ready
                sleep: 5
                tries: 60
          requires:
            - swarm-test
            - compose-test   
    ### Medal of Honor: Allied Assault ###     
      - docker/container-health:
          name: mohaa-compose
          composeFile: examples/docker-compose.mohaa.yml
          command: docker-compose -p mohaa -f /tmp/workspace/examples/docker-compose.mohaa.yml up
          service: mohaa
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.mohaa.yml -p mohaa
                service: mohaa
                command: curl -f http://localhost:28080/ready
                sleep: 30
                tries: 60
          requires:
            - swarm-test
            - compose-test   
    ### Pstbs ###   
      # - docker/container-health:
      #     name: pstbs-compose
      #     composeFile: examples/docker-compose.pstbs.yml
      #     command: docker-compose -p pstbs -f /tmp/workspace/examples/docker-compose.pstbs.yml up
      #     service: pstbs
      #     after_test: 
      #       - docker/compose-exec-retry:
      #           composeFilePath: /tmp/workspace/examples/docker-compose.pstbs.yml -p pstbs 
      #           service: pstbs
      #           command: curl -f http://localhost:28080/ready
      #           sleep: 5
      #           tries: 60
      #     requires:
      #       - swarm-test
      #       - compose-test


    ### Wet ###   
      - docker/container-health:
          name: wet-compose
          composeFile: examples/docker-compose.wet.yml
          command: docker-compose -p wet -f /tmp/workspace/examples/docker-compose.wet.yml up
          service: wet
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.wet.yml -p wet 
                service: wet
                command: curl -f http://localhost:28080/ready
                sleep: 5
                tries: 60
          requires:
            - swarm-test
            - compose-test
    ### VALHEIM ###
      - docker/container-health:
          name: valheim-compose
          composeFile: examples/docker-compose.valheim.yml
          command: docker-compose -p valheim -f /tmp/workspace/examples/docker-compose.valheim.yml up
          service: valheim
          after_test: 
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.valheim.yml -p valheim
                service: valheim
                command: curl -f http://localhost:28080/ready
                sleep: 5
                tries: 60
          requires:
            - swarm-test
            - compose-test
    ### Wurm ###   
      # - docker/container-health:
      #     name: wurm-compose
      #     composeFile: examples/docker-compose.wurm.yml
      #     command: docker-compose -p wurm -f /tmp/workspace/examples/docker-compose.wurm.yml up
      #     service: wurm
      #     after_test: 
      #       - docker/compose-exec-retry:
      #           composeFilePath: /tmp/workspace/examples/docker-compose.wurm.yml -p wurm
      #           service: wurm
      #           command: curl -f http://localhost:28080/ready
      #           sleep: 5
      #           tries: 60
      #     requires:
      #       - swarm-test
      #       - compose-test

