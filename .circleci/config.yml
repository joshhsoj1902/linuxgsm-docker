version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: joshhsoj1902/linuxgsm-docker
    docker:
      - image: joshhsoj1902/circleci-build-image:latest

orbs:
    docker: joshhsoj1902/docker@0.20.0
    ccidocker: circleci/docker@2.2.0

jobs:
  legacy-setup:
    executor: docker-publisher
    steps:
      - checkout
      - run:
          name: setup workspace
          command: |
            cp -rp docker-compose.citest.yml docker-stack.yml Makefile scripts examples /tmp/workspace
            ls -ltr /tmp/workspace
            ls -ltr /tmp/workspace/examples
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker-compose.citest.yml
            - docker-stack.yml
            - examples
            - Makefile
            - scripts

  legacy-publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/legacy-images.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
  legacy-publish-tag:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build image"
          command: |
            docker pull $IMAGE_NAME:latest
            make build
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG

workflows:
  version: 2
  build_and_test_legacy:
    jobs:
      - legacy-setup
      - ccidocker/publish:
          name: legacy-build
          executor:  docker-publisher
          image: $IMAGE_NAME
          tag: latest
          cache_from: $IMAGE_NAME:latest
          dockerfile: legacy.Dockerfile
          remote-docker-version: 20.10.12
          use-buildkit: true
          use-remote-docker: true
          deploy: false
          after_build:
            - run: mkdir -p /tmp/docker
            - run: docker image ls
            - run: docker save $IMAGE_NAME:latest -o /tmp/workspace/legacy-images.tar
            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                  - legacy-images.tar

      - docker/container-health:
          imageFile: legacy-images.tar
          name: legacy-compose-test
          composeFile: docker-compose.citest.yml
          command: docker-compose -p citest -f /tmp/workspace/docker-compose.citest.yml up
          service: css
          after_test:
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/docker-compose.citest.yml -p citest
                service: css
                command: curl -f http://localhost:28080/ready
                sleep: 15
                tries: 60
          requires:
            - legacy-setup
            - legacy-build
    ### 7dtd ###
      - docker/container-health:
          name: legacy-7dtd-compose
          imageFile: legacy-images.tar
          composeFile: examples/docker-compose.7dtd.yml
          command: docker-compose -p 7dtd -f /tmp/workspace/examples/docker-compose.7dtd.yml up
          service: 7dtd
          after_test:
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.7dtd.yml -p 7dtd
                service: 7dtd
                command: curl -f http://localhost:28080/ready
                sleep: 30
                tries: 30
          requires:
            - legacy-compose-test
    ### ARK ###
      - docker/container-health:
          name: legacy-ark-compose
          imageFile: legacy-images.tar
          composeFile: examples/docker-compose.ark.yml
          command: docker-compose -p ark -f /tmp/workspace/examples/docker-compose.ark.yml up
          service: ark
          after_test:
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.ark.yml -p ark
                service: ark
                command: curl -f http://localhost:28080/ready
                sleep: 30
                tries: 60
          requires:
            - legacy-compose-test
    ### CSGO ###
      - docker/container-health:
          name: legacy-csgo-compose
          imageFile: legacy-images.tar
          composeFile: examples/docker-compose.csgo.yml
          command: docker-compose -p csgo -f /tmp/workspace/examples/docker-compose.csgo.yml up
          service: csgo
          after_test:
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.csgo.yml -p csgo
                service: csgo
                command: curl -f http://localhost:28080/ready
                sleep: 30
                tries: 60
          requires:
            - legacy-compose-test
    ### CSS ###
      - docker/container-health:
          name: legacy-css-compose
          imageFile: legacy-images.tar
          composeFile: examples/docker-compose.css.yml
          command: docker-compose -p css -f /tmp/workspace/examples/docker-compose.css.yml up
          service: css
          after_test:
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.css.yml -p css
                service: css
                command: curl -f http://localhost:28080/ready
                sleep: 5
                tries: 60
          requires:
            - legacy-compose-test
    ### GMOD ###
      - docker/container-health:
          name: legacy-gmod-compose
          imageFile: legacy-images.tar
          composeFile: examples/docker-compose.gmod.yml
          command: docker-compose -p gmod -f /tmp/workspace/examples/docker-compose.gmod.yml up
          service: gmod
          after_test:
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.gmod.yml -p gmod
                service: gmod
                command: curl -f http://localhost:28080/ready
                sleep: 15
                tries: 60
          requires:
            - legacy-compose-test
    ### INSS ###
      # - docker/container-health:
      #     name: inss-compose
      #     composeFile: examples/docker-compose.inss.yml
      #     command: docker-compose -p inss -f /tmp/workspace/examples/docker-compose.inss.yml up
      #     service: inss
      #     after_test:
      #       - docker/compose-exec-retry:
      #           composeFilePath: /tmp/workspace/examples/docker-compose.inss.yml -p inss
      #           service: inss
      #           command: curl -f http://localhost:28080/ready
      #           sleep: 30
      #           tries: 60
      #     requires:
      #       - swarm-test
      #       - compose-test
    # ### Minecraft ###
    #   - docker/container-health:
    #       name: minecraft-compose
    #       composeFile: examples/docker-compose.minecraft.yml
    #       command: docker-compose -p minecraft -f /tmp/workspace/examples/docker-compose.minecraft.yml up
    #       service: minecraft
    #       after_test:
    #         - docker/compose-exec-retry:
    #             composeFilePath: /tmp/workspace/examples/docker-compose.minecraft.yml -p minecraft
    #             service: minecraft
    #             command: curl -f http://localhost:28080/ready
    #             sleep: 5
    #             tries: 60
    #       requires:
    #         - compose-test
    ### Medal of Honor: Allied Assault ###
      - docker/container-health:
          name: legacy-mohaa-compose
          imageFile: legacy-images.tar
          composeFile: examples/docker-compose.mohaa.yml
          command: docker-compose -p mohaa -f /tmp/workspace/examples/docker-compose.mohaa.yml up
          service: mohaa
          after_test:
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.mohaa.yml -p mohaa
                service: mohaa
                command: curl -f http://localhost:28080/ready
                sleep: 30
                tries: 60
          requires:
            - legacy-compose-test
    ### Pstbs ###
      # - docker/container-health:
      #     name: pstbs-compose
      #     composeFile: examples/docker-compose.pstbs.yml
      #     command: docker-compose -p pstbs -f /tmp/workspace/examples/docker-compose.pstbs.yml up
      #     service: pstbs
      #     after_test:
      #       - docker/compose-exec-retry:
      #           composeFilePath: /tmp/workspace/examples/docker-compose.pstbs.yml -p pstbs
      #           service: pstbs
      #           command: curl -f http://localhost:28080/ready
      #           sleep: 5
      #           tries: 60
      #     requires:
      #       - compose-test


    ### Wet ###
      - docker/container-health:
          name: legacy-wet-compose
          imageFile: legacy-images.tar
          composeFile: examples/docker-compose.wet.yml
          command: docker-compose -p wet -f /tmp/workspace/examples/docker-compose.wet.yml up
          service: wet
          after_test:
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.wet.yml -p wet
                service: wet
                command: curl -f http://localhost:28080/ready
                sleep: 5
                tries: 60
          requires:
            - legacy-compose-test
    ### VALHEIM ###
      - docker/container-health:
          name: legacy-valheim-compose
          imageFile: legacy-images.tar
          composeFile: examples/docker-compose.valheim.yml
          command: docker-compose -p valheim -f /tmp/workspace/examples/docker-compose.valheim.yml up
          service: valheim
          after_test:
            - docker/compose-exec-retry:
                composeFilePath: /tmp/workspace/examples/docker-compose.valheim.yml -p valheim
                service: valheim
                command: curl -f http://localhost:28080/ready
                sleep: 5
                tries: 60
          requires:
            - legacy-compose-test
    ### Wurm ###
      # - docker/container-health:
      #     name: wurm-compose
      #     composeFile: examples/docker-compose.wurm.yml
      #     command: docker-compose -p wurm -f /tmp/workspace/examples/docker-compose.wurm.yml up
      #     service: wurm
      #     after_test:
      #       - docker/compose-exec-retry:
      #           composeFilePath: /tmp/workspace/examples/docker-compose.wurm.yml -p wurm
      #           service: wurm
      #           command: curl -f http://localhost:28080/ready
      #           sleep: 5
      #           tries: 60
      #     requires:
      #       - compose-test

      - legacy-publish-latest:
          requires:
            - legacy-valheim-compose
            - legacy-wet-compose
            - legacy-mohaa-compose
            - legacy-gmod-compose
            - legacy-css-compose
            - legacy-csgo-compose
            - legacy-ark-compose
            - legacy-7dtd-compose
          filters:
            branches:
              only: master
      - legacy-publish-tag:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

